#define _CRT_SECURE_NO_WARNINGS 1
#include "game.h"

void game()
{
	char board[ROW][COL];
	char ret=0;
	initboard(board,ROW,COL);
	displayboard(board,ROW,COL);
	while (1)
	{
		playermove(board, ROW, COL);
		displayboard(board, ROW, COL);
		ret = judge(board, ROW, COL);
		if (ret != 'C')
		{
			break;
		}
		computermove(board, ROW, COL);
		displayboard(board, ROW, COL);
		ret = judge(board, ROW, COL);
		if (ret != 'C')
		{
			break;
		}
	}
	if (ret == '*')
	{
		printf("恭喜你赢了！！\n");
	}
	else if (ret == '#')
	{
		printf("电脑胜利\n");
	}
	else if (ret == 'Q')
	{
		printf("平局\n");
	}
}

void text()
{
	srand((unsigned int)time(NULL));
	int input = 0;
  do
  {
	  printf("*****************************\n");
	  printf("****1.三子棋   0.退出游戏****\n");
	  printf("*****************************\n");
	  printf("请输入：");
	  scanf("%d", &input);
	
	
		switch (input)
		{
		case 1:
			game();
			break;
		case 0:
			printf("退出游戏\n");
			break;
		default:
			printf("输入错误，请重新输入：\n");
			break;
		}
  } while (input != 0);

}

int main()
{
	text();
	return 0;
}






#define _CRT_SECURE_NO_WARNINGS 1
#include "game.h"

void initboard(char arr[ROW][COL], int row, int col)
{
	int i = 0, j = 0;
	for (i = 0; i < row; i++)
	{

		for (j = 0; j < col; j++)
		{
			arr[i][j] = ' ';
		}
	}
}

void displayboard(char arr[ROW][COL], int row, int col)
{
	int i = 0, j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			printf(" %c ", arr[i][j]);
			if (j < col - 1)
			{
				printf("|");
			}
		}
		printf("\n");
		if(i<row-1)
		{ 
		   for (j = 0; j < col; j++)
		   {
			    printf("---");
			     if (j < col - 1)
			     {
				printf("|");
			     }
		   }
		  printf("\n");
		}
	}
}

void playermove(char arr[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	
	while (1)
	{ 
      printf("请输入您落子的坐标：\n");
	  scanf("%d%d", &x, &y);
		if (x <= col && x >= 1 && y >= 1 && y <= row)
	    {	
			if (arr[x - 1][y - 1] == ' ')
			{
				arr[x - 1][y - 1] = '*';
				break;
			}
			else
			{
				printf("该位置已经占用，请重新落子：\n");
				scanf("%d%d", &x, &y);
			}
		}
	    else
	    {
		  printf("输入错误，请重新输入");
	    }
	}
}

void computermove(char arr[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	printf("电脑走\n");
	while (1)
	{
		x = rand() % col;
		y = rand() % row;
		
		
		if (arr[x][y] == ' ')
			{
				arr[x][y] = '#';
				break;
			}
	}
}

char judge(char arr[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0; i < row; i++)
	{
		if (arr[i][0] == arr[i][1] && arr[i][2] == arr[i][1] && arr[i][0]!= ' ')
			return arr[i][0];
	}

	for (i = 0; i < row; i++)
	{
		if (arr[0][i] == arr[1][i] && arr[1][i] == arr[2][i] && arr[0][i] != ' ')
			return arr[0][i];
	}

	if (arr[0][0] == arr[1][1] && arr[2][2] == arr[1][1] && arr[0][0] != ' ')
	{
		return arr[0][0];
	}
	else if (arr[0][2] == arr[1][1] && arr[1][1] == arr[2][0] && arr[1][1] != ' ')
	{
		return arr[1][1];
	}

	if (isfull == 1)
	{
		return 'Q';
	}
	return 'C';
}

int isfull(char arr[ROW][COL], int row, int col)
{
	int i = 0, j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			if (arr[i][j] == ' ')
			{
				return 0;
			}
		}
	}
	return 1;
}



#define ROW 3
#define COL 3
#include <stdio.h>
#include <stdlib.h>
#include<time.h>

void initboard(char arr[ROW][COL], int row, int col);
void displayboard(char arr[ROW][COL], int row, int col);
void playermove(char arr[ROW][COL], int row, int col);
void computermove(char arr[ROW][COL], int row, int col);
char judge(char arr[ROW][COL], int row, int col);
int isfull(char arr[ROW][COL], int row, int col);




